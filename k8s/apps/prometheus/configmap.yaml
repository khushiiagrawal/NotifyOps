apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: notifyops
  labels:
    app: prometheus
    component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: "notifyops-cluster"
        environment: "development"

    rule_files:
      - /etc/prometheus/rules/*.yml

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        metrics_path: /metrics
        scrape_interval: 10s

      # NotifyOps Backend
      - job_name: 'notifyops-backend'
        static_configs:
          - targets: ['notifyops-service:9090']
        metrics_path: /metrics
        scrape_interval: 10s
        honor_labels: true
        scrape_timeout: 5s

      # Web Application
      - job_name: 'notifyops-web'
        static_configs:
          - targets: ['web-service:3000']
        metrics_path: /api/metrics
        scrape_interval: 15s
        scrape_timeout: 5s

      # Grafana
      - job_name: 'grafana'
        static_configs:
          - targets: ['grafana-service:3000']
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 5s

      # Kubernetes Service Discovery (optional)
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_service_name
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # Node Exporter (if deployed)
      - job_name: 'node-exporter'
        static_configs:
          - targets: ['node-exporter-service:9100']
        scrape_interval: 30s
        scrape_timeout: 5s

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              # - alertmanager:9093  # Uncomment if AlertManager is deployed

    # Recording rules for common queries
    rule_files:
      - /etc/prometheus/rules/notifyops-rules.yml
---
# Prometheus Rules ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: notifyops
  labels:
    app: prometheus
    component: rules
data:
  notifyops-rules.yml: |
    groups:
      - name: notifyops.rules
        rules:
          # High CPU Usage Alert
          - alert: HighCPUUsage
            expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected"
              description: "CPU usage is above 80% for more than 5 minutes"

          # High Memory Usage Alert
          - alert: HighMemoryUsage
            expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage detected"
              description: "Memory usage is above 85% for more than 5 minutes"

          # Pod Restart Alert
          - alert: PodRestarting
            expr: increase(kube_pod_container_status_restarts_total[15m]) > 0
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Pod is restarting"
              description: "Pod {{ $labels.pod }} is restarting frequently"

          # Service Down Alert
          - alert: ServiceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Service is down"
              description: "Service {{ $labels.job }} is down"

          # High Response Time Alert
          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High response time detected"
              description: "95th percentile response time is above 2 seconds"

          # Error Rate Alert
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is above 5% for more than 5 minutes"