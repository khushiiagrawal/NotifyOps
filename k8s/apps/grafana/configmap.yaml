apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: notifyops
  labels:
    app: grafana
    component: config
data:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = localhost
    root_url = %(protocol)s://%(domain)s/grafana/
    serve_from_sub_path = true
    
    [security]
    admin_password = admin
    allow_sign_up = false
    disable_gravatar = true
    cookie_secure = false
    cookie_samesite = lax
    
    [users]
    allow_sign_up = false
    auto_assign_org_role = Viewer
    
    [auth.anonymous]
    enabled = false
    
    [database]
    type = sqlite3
    path = /var/lib/grafana/grafana.db
    
    [session]
    provider = file
    provider_config = sessions
    
    [log]
    mode = console
    level = info
    
    [paths]
    data = /var/lib/grafana
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    
    [smtp]
    enabled = false
    
    [metrics]
    enabled = true
    interval_seconds = 10
    
    [alerting]
    enabled = true
    execute_alerts = true
    
    [unified_alerting]
    enabled = true
---
# Grafana Datasources Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: notifyops
  labels:
    app: grafana
    component: datasources
data:
  datasources.yml: |
    apiVersion: 1
    
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
        jsonData:
          timeInterval: "15s"
          queryTimeout: "60s"
          httpMethod: "POST"
        secureJsonData: {}
        
      - name: NotifyOps Backend
        type: prometheus
        access: proxy
        url: http://notifyops-service:9090
        isDefault: false
        editable: true
        jsonData:
          timeInterval: "10s"
          queryTimeout: "30s"
        secureJsonData: {}
        
      - name: Web Application
        type: prometheus
        access: proxy
        url: http://web-service:3000
        isDefault: false
        editable: true
        jsonData:
          timeInterval: "15s"
          queryTimeout: "30s"
        secureJsonData: {}
---
# Grafana Dashboards Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: notifyops
  labels:
    app: grafana
    component: dashboards
data:
  dashboards.yml: |
    apiVersion: 1
    
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /etc/grafana/provisioning/dashboards
---
# NotifyOps Dashboard
apiVersion: v1
kind: ConfigMap
metadata:
  name: notifyops-dashboard
  namespace: notifyops
  labels:
    app: grafana
    component: dashboard
data:
  notifyops-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "NotifyOps Overview",
        "tags": ["notifyops", "monitoring"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "HTTP Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total[5m])",
                "legendFormat": "{{method}} {{handler}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{status=~\"5..\"}[5m]) / rate(http_requests_total[5m])",
                "legendFormat": "Error Rate"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Active Pods",
            "type": "stat",
            "targets": [
              {
                "expr": "count(up{job=~\".*\"})",
                "legendFormat": "Active Pods"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 12, "y": 8}
          },
          {
            "id": 5,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "100 - (avg by(instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "CPU Usage %"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16}
          },
          {
            "id": 6,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100",
                "legendFormat": "Memory Usage %"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }