apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notifyops-ingress
  namespace: notifyops
  labels:
    app: notifyops
    component: ingress
  annotations:
    # Nginx Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # CORS for webhooks
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  # Main web application
  - host: localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-service
            port:
              number: 3000
      # GitHub webhook endpoint
      - path: /webhook/github
        pathType: Prefix
        backend:
          service:
            name: notifyops-service
            port:
              number: 8080
      # Slack webhook endpoint
      - path: /webhook/slack
        pathType: Prefix
        backend:
          service:
            name: notifyops-service
            port:
              number: 8080
      # Health check endpoint
      - path: /health
        pathType: Exact
        backend:
          service:
            name: notifyops-service
            port:
              number: 8080
      # API endpoints
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: notifyops-service
            port:
              number: 8080
      # Prometheus metrics (optional - for debugging)
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: notifyops-service
            port:
              number: 9090
      # Grafana dashboard
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
---
# Separate ingress for Prometheus (optional - for admin access)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: notifyops
  labels:
    app: prometheus
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # Basic auth for Prometheus (optional)
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: prometheus-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090